type MintError = variant { Cap : nat; End : nat64; Start : nat64; Unmintable };
type OrdError = variant {
  Rpc : RpcError;
  Overflow;
  Params : text;
  Index : MintError;
  BlockVerification : nat32;
};
type Result = variant { Ok : record { nat32; text }; Err : OrdError };
type Result_1 = variant { Ok : vec RuneBalance; Err : OrdError };
type RpcError = variant {
  Io : record { text; text; text };
  Endpoint : record { text; text; text };
  Decode : record { text; text; text };
};
type RuneBalance = record { id : RuneId; balance : nat };
type RuneId = record { tx : nat32; block : nat64 };
service : (text) -> {
  get_height : () -> (Result) query;
  get_runes_by_utxo : (text, nat32) -> (Result_1) query;
}
